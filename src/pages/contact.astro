---
import GridWrapper from "../layouts/GridWrapper.astro";
---

<GridWrapper>
  <div
    class="h-1/2 w-full col-span-2 col-start-1 row-start-1 bg-bg p-11 flex flex-col gap-6 xl:gap-8 justify-between self-end"
  >
    <div class="flex flex-col gap-2.5">
      <h1 class="text-primary font-medium text-3xl xl:text-4xl">
        Like what you see?
      </h1>
      <h2 class="text-black/75 tracking-widest text-md xl:text-xl font-hoe">
        Donâ€™t hesitate to reach out
      </h2>
    </div>
    <div id="contactInfo" class="grid gap-6">
      <a
        class="flex items-end gap-2 text-primary/75 hover:text-primary"
        href="mailto:charlotte_1302@me.com"
      >
        <svg class="" width="24" height="24" viewBox="0 0 24 24">
          <path
            fill="currentColor"
            d="M19 4H5a3 3 0 0 0-3 3v10a3 3 0 0 0 3 3h14a3 3 0 0 0 3-3V7a3 3 0 0 0-3-3Zm-.67 2L12 10.75L5.67 6ZM19 18H5a1 1 0 0 1-1-1V7.25l7.4 5.55a1 1 0 0 0 .6.2a1 1 0 0 0 .6-.2L20 7.25V17a1 1 0 0 1-1 1Z"
          ></path>
        </svg>
        <p class="font-medium text-black hover:text-primary">
          Charlotte_1302@me.com
        </p>
      </a>

      <a
        target="_blank"
        class="flex items-end gap-2 text-primary/75 hover:text-primary"
        href="https://www.linkedin.com/in/charlotte-franciska-christiansen-339046239/"
      >
        <svg class="" width="24" height="24" viewBox="0 0 24 24">
          <path
            fill="currentColor"
            d="M15.15 8.4a5.83 5.83 0 0 0-5.85 5.82v5.88a.9.9 0 0 0 .9.9h2.1a.9.9 0 0 0 .9-.9v-5.88a1.94 1.94 0 0 1 2.15-1.93a2 2 0 0 1 1.75 2v5.81a.9.9 0 0 0 .9.9h2.1a.9.9 0 0 0 .9-.9v-5.88a5.83 5.83 0 0 0-5.85-5.82Z"
          ></path>
          <rect
            width="4.5"
            height="11.7"
            x="3"
            y="9.3"
            fill="currentColor"
            rx=".9"
            ry=".9"></rect>
          <circle cx="5.25" cy="5.25" r="2.25" fill="currentColor"></circle>
        </svg>
        <p class="font-medium text-black hover:text-primary">
          Charlotte Franciska Christiansen
        </p>
      </a>

      <a
        target="_blank"
        class="flex items-end gap-2 text-primary/75 hover:text-primary"
        href="https://github.com/char308z"
      >
        <svg class="inline" width="24" height="24" viewBox="0 0 24 24">
          <path
            fill="currentColor"
            d="M16.24 22a1 1 0 0 1-1-1v-2.6a2.15 2.15 0 0 0-.54-1.66a1 1 0 0 1 .61-1.67C17.75 14.78 20 14 20 9.77a4 4 0 0 0-.67-2.22a2.75 2.75 0 0 1-.41-2.06a3.71 3.71 0 0 0 0-1.41a7.65 7.65 0 0 0-2.09 1.09a1 1 0 0 1-.84.15a10.15 10.15 0 0 0-5.52 0a1 1 0 0 1-.84-.15a7.4 7.4 0 0 0-2.11-1.09a3.52 3.52 0 0 0 0 1.41a2.84 2.84 0 0 1-.43 2.08a4.07 4.07 0 0 0-.67 2.23c0 3.89 1.88 4.93 4.7 5.29a1 1 0 0 1 .82.66a1 1 0 0 1-.21 1a2.06 2.06 0 0 0-.55 1.56V21a1 1 0 0 1-2 0v-.57a6 6 0 0 1-5.27-2.09a3.9 3.9 0 0 0-1.16-.88a1 1 0 1 1 .5-1.94a4.93 4.93 0 0 1 2 1.36c1 1 2 1.88 3.9 1.52a3.89 3.89 0 0 1 .23-1.58c-2.06-.52-5-2-5-7a6 6 0 0 1 1-3.33a.85.85 0 0 0 .13-.62a5.69 5.69 0 0 1 .33-3.21a1 1 0 0 1 .63-.57c.34-.1 1.56-.3 3.87 1.2a12.16 12.16 0 0 1 5.69 0c2.31-1.5 3.53-1.31 3.86-1.2a1 1 0 0 1 .63.57a5.71 5.71 0 0 1 .33 3.22a.75.75 0 0 0 .11.57a6 6 0 0 1 1 3.34c0 5.07-2.92 6.54-5 7a4.28 4.28 0 0 1 .22 1.67V21a1 1 0 0 1-.94 1Z"
          ></path>
        </svg>
        <p class="font-medium text-black hover:text-primary">Char308z</p>
      </a>

      <a
        class="flex items-end gap-2 text-primary/75 hover:text-primary"
        href="tel:+4552374740"
      >
        <svg class="" width="24" height="24" viewBox="0 0 24 24">
          <path
            fill="currentColor"
            d="M17.4 22A15.42 15.42 0 0 1 2 6.6A4.6 4.6 0 0 1 6.6 2a3.94 3.94 0 0 1 .77.07a3.79 3.79 0 0 1 .72.18a1 1 0 0 1 .65.75l1.37 6a1 1 0 0 1-.26.92c-.13.14-.14.15-1.37.79a9.91 9.91 0 0 0 4.87 4.89c.65-1.24.66-1.25.8-1.38a1 1 0 0 1 .92-.26l6 1.37a1 1 0 0 1 .72.65a4.34 4.34 0 0 1 .19.73a4.77 4.77 0 0 1 .06.76A4.6 4.6 0 0 1 17.4 22Z"
          ></path>
        </svg>
        <p class="font-medium text-black hover:text-primary">
          +45 52 37 47 40
        </p></a
      >
    </div>
  </div>
  <div
    class="bouncingBox h-screen w-full col-start-3 col-span-3 row-start-1 flex justify-center items-center bg-secondary"
  >
    <svg
      class="logo w-1/8"
      fill="#432dd7"
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 90 135"
      ><path
        class="logoBounce"
        d="M88.78,67.29c0,1.44-.83,2.4-1.19,2.4-.73,0-1-1-1.32-2.52-1.45-6.84-4.08-7.56-10.8-8.16-4.32-.36-17-.12-22.16-.12-.84,0-1.53,1.2-1.56,2.16-.3,8.48-.53,13.8-.36,28.52a22.85,22.85,0,0,0,8.67-2.52,19.62,19.62,0,0,0,8.76-8.91c1.55-3.45,1.93-4.24,2.89-4.21.6,0,.79,1.64.64,2.58-.18,2-.71,7.38-.89,9.13-.16,1.2-1.77,2.9-3.23,3.66a43.32,43.32,0,0,1-16.82,4.49c0,.85,0,1.83,0,3-.12,8.4-.42,16.83.24,25.2.48,6.12.84,6.84,7.43,7.92,1.57.24,2.76.84,2.76,1.56s-1.43,1.32-2.63,1.32c-2.28,0-7.44-.36-12.36-.36-4.68,0-11.28.36-13.32.36-1.68,0-2.52-.48-2.52-1.08s.72-1,2.16-1.44c6.48-1.32,7.08-2.64,7.8-7.8.51-3.88.67-17,.71-28.7-11.59-1-24.14-6.15-32-17.1C3.58,68.28.93,57,1.25,47.06,1.69,33.07,7,19.9,19.43,10.87a45.92,45.92,0,0,1,29-8.65A65.68,65.68,0,0,1,65.71,5.46,14.06,14.06,0,0,0,71.07,6.7c.6,0,1.27,1.53,1.13,2.06a137,137,0,0,0,0,13.74c.17,2.16-.46,3.22-1.18,3.19-.48,0-1-1.11-1.47-2.87-1.61-6.11-3.57-8.6-7-11.4-3.15-2.93-9.3-5.95-17.1-6.19-19.91-.63-31.56,15-32.26,37C13,52.41,14.42,59.46,16.64,65.32c5.75,14.68,16,21.77,25,23.78V87.81c0-7.08-.12-16-.36-21.36-.24-6.6-1-8.28-7.44-9-1.08-.12-2.4-.36-2.4-1.32s1.32-1.2,3.36-1.2c3.36,0,7.8.36,11.88.36H78.83c3.72,0,7.56-.72,8.52-.72a1.91,1.91,0,0,1,1.2,1.56C88.55,59.49,88.78,63.81,88.78,67.29Z"
      ></path>
    </svg>
  </div>
</GridWrapper>

<script is:inline lang="ts">
  // Add this script to your page
  document.addEventListener("DOMContentLoaded", function () {
    // Get the SVG element
    const svg = document.querySelector(".logoBounce").parentElement;

    // Get the container element
    const container = svg.parentElement;

    // Make sure the container has position relative (important for absolute positioning)
    container.style.position = "relative";
    container.style.overflow = "hidden"; // Prevent any overflow

    // Animation settings
    const speed = {
      x: 1.5,
      y: 1.5,
    };

    // Get container dimensions
    const getContainerDimensions = () => {
      return {
        width: container.clientWidth,
        height: container.clientHeight,
      };
    };

    // Get SVG dimensions
    const getSvgDimensions = () => {
      const rect = svg.getBoundingClientRect();
      return {
        width: rect.width,
        height: rect.height,
      };
    };

    // Initialize position (start from a random position)
    let dimensions = getContainerDimensions();
    let svgSize = getSvgDimensions();

    // Calculate radius for bounce detection
    const radius = Math.max(svgSize.width, svgSize.height) / 2;

    let position = {
      x: radius + Math.random() * (dimensions.width - 2 * radius),
      y: radius + Math.random() * (dimensions.height - 2 * radius),
    };

    // Apply initial position
    svg.style.fill = "#432dd7";
    svg.style.position = "absolute";
    svg.style.left = position.x + "px";
    svg.style.top = position.y + "px";
    svg.style.transform = "translate(-50%, -50%)"; // Center the SVG at its position

    // Initialize direction
    let direction = {
      x: speed.x,
      y: speed.y,
    };

    // Generate random color
    function getRandomColor() {
      const r = Math.floor(Math.random() * 256);
      const g = Math.floor(Math.random() * 256);
      const b = Math.floor(Math.random() * 256);
      return `rgb(${r}, ${g}, ${b})`;
    }

    // Animation loop
    function animate() {
      // Update position
      position.x += direction.x;
      position.y += direction.y;

      // Check boundaries - horizontal
      if (position.x - radius <= 0 || position.x + radius >= dimensions.width) {
        direction.x *= -1; // Reverse direction
        // Change color when hitting the edge
        document
          .querySelector(".logoBounce")
          .setAttribute("fill", getRandomColor());
      }

      // Check boundaries - vertical
      if (
        position.y - radius <= 0 ||
        position.y + radius >= dimensions.height
      ) {
        direction.y *= -1; // Reverse direction
        // Change color when hitting the edge
        document
          .querySelector(".logoBounce")
          .setAttribute("fill", getRandomColor());
      }

      // Apply new position
      svg.style.left = position.x + "px";
      svg.style.top = position.y + "px";

      // Continue animation
      requestAnimationFrame(animate);
    }

    // Set initial color
    document.querySelector(".logoBounce").setAttribute("fill", "#432dd7");

    // Start animation
    animate();

    // Handle window resize
    window.addEventListener("resize", function () {
      // Update dimensions
      dimensions = getContainerDimensions();
      svgSize = getSvgDimensions();

      // Update radius
      const newRadius = Math.max(svgSize.width, svgSize.height) / 2;

      // Ensure the SVG stays within bounds after resize
      if (position.x - newRadius < 0) {
        position.x = newRadius;
      } else if (position.x + newRadius > dimensions.width) {
        position.x = dimensions.width - newRadius;
      }

      if (position.y - newRadius < 0) {
        position.y = newRadius;
      } else if (position.y + newRadius > dimensions.height) {
        position.y = dimensions.height - newRadius;
      }
    });
  });
</script>
